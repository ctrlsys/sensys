#
# Copyright (c) 2016     Intel, Inc.  All rights reserved.
# $COPYRIGHT$
#
#Additional copyrights may follow
#
# $HEADER$
#
# This is the US/English help file for OCTL
#

[info:usage]
Usage: octl [OPTIONS]
  Open Resilient Cluster Manager "octl" Tool
%s

Interactive shell:
Use 'quit' - for exiting the shell
Use '<tab>' or '<?>' for help

[info:version]
octl %s

[info:octl]
*** WELCOME TO OCTL ***
Possible commands:

[info:success]
Success!

[info:no-results]
No results returned.

[info:getting-policy]
ORCM getting sensor policy from node:%s

[info:no-active-policy]
There is no active policy!

[info:policy-header]
Sensor      Threshold        Hi/Lo    Max_Count/Time_Window    Severity      Action
-----------------------------------------------------------------------------------

[info:policy]
%-10s %8.3f %3s     %5s   %5d in %5d seconds     %6s    %10s

[info:setting-sample-rate]
ORCM setting sensor:%s sample-rate on node:%s

[info:getting-sample-rate]
ORCM getting sensor:%s sample-rate from node:%s

[info:sample-rate-header]
Sensor     sample-rate
------------------------------------------------------------------------------

[info:sample-rate]
%s            %d

[info:sampling-success]
Success changing sensor sampling on node '%s'.

[info:storage-reponse]
Sensor storage response is: %i

[info:query-extra-args]
WARNING: Ignoring from "%s" at position "%d". Extra arguments detected!

[info:query-event-data]
Command syntax: query event data [start-date [end-date]] <node-list>

[info:query-event-sensor-data]
Command syntax: query event sensor-data <event-id> [interval] <sensor-list> [node-list]

[info:query-history]
Command syntax: query history [start-date [end-date]] <nodelist>

[info:query-idle]
Command syntax: query idle [interval] <node-list>

[info:query-log]
Command syntax: query log <text-in-log> [start-date [end-date]] [nodelist]

[info:query-node-status]
Command syntax: query node status <node-list>

[info:query-sensor]
Command syntax: query sensor <sensor-list> [start-date [end-date]] <upper-bound lower-bound> [node-list]

[info:power-modes]
Possible modes:

[info:power-budget]
Current cluster power budget: %d watts.

[info:power-mode-df]
Current default power mode: %s.

[info:power-window-df]
Current default power window: %d ms.

[info:power-budget-limit]
Current default power budget %s limit: %d watts

[info:power-time-limit]
Current default power %s time limit: %d ms.

[info:power-freq-df]
Current default power frequency: %s.

[info:power-freq-df-GHz]
Current default power frequency: %f GHz.

[info:power-freq-strict]
Current default frequency strict setting: %s.

[info:session-budget]
Session %ld current cluster power budget: %d watts.

[info:session-mode]
Session %ld current power mode: %s.

[info:session-window]
Session %ld current power window: %d ms.

[info:session-budget-limit]
Session %ld current power budget %s limit: %d watts.

[info:session-time-limit]
Session %ld current power %s time limit: %d ms.

[info:session-freq]
Session %ld current power frequency: %s.

[info:session-freq-GHz]
Session %ld current power frequency: %f MHz.

[info:session-freq-strict]
Session %ld current frequency strict setting: %s.

[info:executing-diag]
ORCM Executing Diag:%s on node: %s

[info:total-nodes]
TOTAL NODES : %i

[info:resource-header]
NODES                : STATE  SCHED_STATE
-----------------------------------------

[info:rows-found]
%u rows were found (%0.3f seconds)

[info:rows-limit]
Results have a limit of %d rows!

[info:workflow-created]
Workflow created with id: %i.

[info:workflow-key-type]
Key: %s
Type: %d

[info:workflow-key-type]
Value: %s

[info:workflow-deleted]
Workflow(s) deleted.

[info:workflow-list]
workflow name is: %s   workflow id is: %d.

[info:no-workflows]
No workflow ids

[info:grouping-success]
Grouping: %s done successfully!

[info:no-record]
There is no record!

[info:group-name]
group name=%s

[info:member-list]
member list=%s

[info:queue-header]
********
 QUEUES
********

[info:queue-sessions]
%s (%i sessions)
----------------

[info:smpt-header]
NODE          SMTP_KEY      SMTP_VALUE
--------------------------------------

[info:notifier-policy]
Notifier %s policy on node: %s

[info:notifier-get-policy]
Node %s failed to get notifier policy!

[info:notifier-header]
Node          Severity      Action
-----------------------------------

[info:notifier-data]
%-10s    %6s    %10s

[info:chassis-header]
Node          Chassis ID LED
-----------------------------------/

[info:chassis-success]
%s: Success!

[info:chassis-failure]
%s: Failed

[info:sensor-set-sample-rate]
Note: Setting per sensor sample rate in the examples below will take effect
      only if the sensor is started in a progess thread
Example: sensor set sample-rate coretemp 10 c[2:1-10]
         sensor set sample-rate freq 10 c[2:1-10]

[info:resource-drain]
Note: This command only takes the nodes out of the available resource
      pool of the scheduler. It has nothing to do with the running
      status of the nodes.

[info:resource-resume]
Note: This command only brings the nodes into the available resource
      pool of the scheduler. It has nothing to do with the running
      status of the nodes.

[error:add-wildcard]
Neither the group name nor the node regex can be a wildcard for add!

[error:allocate-memory]
Could not allocate memory for %s.

[error:bad-db-component]
Is not possible to connect to the database.
Please ensure that the database credentials are stored
in the openmpi-mca-params.conf file.

[error:bmc-info]
BMC information not found for node %s.

[error:chassis-id-operation]
Node %s failed to perform chassis id operation.

[error:chassis-ipmi-colission]
Node %s failed to perform chassis id operation since ipmi or nodepower sensors are running on its aggregator.

[error:connection-db-fail]
The connection to the database has failed.

[error:connection-fail]
The connection to daemon failed.

[error:diag-mem]
diag mem failed!

[error:disconnect-db-fail]
Failed to close database connection.

[error:empty-cmd]
No command parsed!

[error:fetch-db-fail]
Failed to fetch data from the database.

[error:framework-data-type]
Unexpected data type from parser framework.

[error:framework-open]
Error while opening parser framework

[error:grouping-remove]
%s
grouping remove failed!

[error:illegal-cmd]
Illegal command: %s

[error:illegal-pw-mode]
Illegal Power Management mode, use 'power get modes' to see possible modes.

[error:invalid-argument]
invalid arguments!
%s

[error:item-notfound]
%s not found

[error:no-aggregator]
aggregator isn't present in the workflow file.

[error:no-cmd]
No command specified.

[error:no-date]
"%s" is not a date.

[error:no-float]
"%s" is not a real number.

[error:no-integer]
"%s" is not an integer.

[error:no-interval]
"%s" is not an interval.

[error:no-interval-unit]
"%c" is not a valid interval unit.

[error:invalid-sample-rate]
The sample rate is invalid. The valid sample rate should be an integer no less than 1.

[error:no-ocomma_list]
"%s" is not an orcm comma separated list.

[error:no-regex]
Regular expression failed to execute.

[error:no-string]
"%s" is not a string.

[error:node-notfound]
Node '%s' not found!

[error:nodelist-extract]
Unable to extract nodelist "%s" or an empty list was specified.

[error:nodelist-notfound]
Nodelist '%s' not found!

[error:not-implemented]
Not implemented.

[error:notifier-get-smpt-policy]
Node %s failed to get notifier smtp policy!

[error:null-arg]
Invalid argument %s!
%s is NULL.

[error:orcm-init]
Failed to initialize orcm.

[error:orcm-finalize]
Failed orcm_finalize.

[error:orcmsched-fail]
Unable to get results via ORCM scheduler.

[error:pack]
Internal buffer pack error.

[error:power-set]
power set failed!

[error:qry-unk-db-data-type]
Unknown ORCM DB query data type.

[error:resource-drain]
resource drain failed!

[error:resource-resume]
resource resume failed!

[error:sampling-fail]
Failure changing sensor sampling on node %s
Is the datagroup and/or sensor label correct (%s)?
Is the datagroup plugin actively running on the node?

[error:sensor_limit_exceeded]
Sensor limit exceeded!

[error:session-cancel]
session cancel failed!

[error:session-id]
Invalid SESSION ID.

[error:session-set]
session set failed!

[error:storage-set-failure]
Storage policy setting failed!

[error:unknown]
Unknown error

[error:unknown-usg]
Unknown.
%s

[error:unpack]
Internal buffer unpack error.

[error:workflow-failure]
Workflow not added.
Possible bad file, verify if the syntax is correct and try again.

[error:workflow-notfound]
Workflow not found.

[usage:sensor]
sensor enable|disable|reset <nodelist> <{datagroup|"all"}[:sensor-label-name|"all"]>
Example: sensor enable c[2:1-10] coretemp:core0
         sensor enable c[2:1-10] all:core0
         sensor disable c[2:1-10] coretemp:core0
         sensor disable c[2:1-10] all:core0
         sensor reset c[2:1-10] coretemp:core0
         sensor reset c[2:1-10] all:core0

[usage:sensor-get-policy]
sensor get policy <nodelist>
Example: sensor get policy c[2:1-10]

[usage:sensor-set-sample-rate]
sensor set sample-rate <sensor-name> <sample-rate> <nodelist>
Example: sensor set sample-rate base 10 c[2:1-10]

Note: Setting per sensor sample rate in the examples below will take effect
      only if the sensor is started in a progess thread
Example: sensor set sample-rate coretemp 10 c[2:1-10]
         sensor set sample-rate freq 10 c[2:1-10]

[usage:sensor-get-sample-rate]
sensor get sample-rate <sensor-name> <nodelist>
Example: sensor get sample-rate base c[2:1-10]
         sensor get sample-rate coretemp c[2:1-10]
         sensor get sample-rate freq c[2:1-10]

[usage:sensor-get-inventory]
sensor get inventory <nodelist>
Example: sensor get inventory c[2:1-10]

[usage:sensor-store]
sensor store <command> <aggregators>
Example: sensor store raw_data a[2:1-10]
         sensor store event_data a[2:1-10]
         sensor store all a[2:1-10]
         sensor store none a[2:1-10]

[usage:power-set]
power set <command> <value>
Example: power set budget 100
         power set mode MANUAL_FREQ
         power set window 100
         power set overage 100
         power set underage 100
         power set overage_time 100
         power set underage_time 100
         power set frequency 100
         power set strict 0

[usage:power-set-mode]
power set mode <value>
Example: power set mode MANUAL_FREQ

[usage:power-get]
power get <command>
Example: power get budget
         power get mode
         power get modes
         power get window
         power get overage
         power get underage
         power get overage_time
         power get underage_time
         power get frequency
         power get strict

[usage:diag]
diag <command> <nodelist>
Example: diag cpu c[2:1-10]
         diag eth c[2:1-10]
         diag mem c[2:1-10]

[usage:resource-drain]
resource drain <nodelist>
Note: This command only takes the nodes out of the available resource
      pool of the scheduler. It has nothing to do with the running
      status of the nodes.
Example: resource drain c[2:1-10]

[usage:resource-resume]
resource resume <nodelist>
Note: This command only brings the nodes into the available resource
      pool of the scheduler. It has nothing to do with the running
      status of the nodes.
Example: resource resume c[2:1-10]

[usage:session-cancel]
session cancel <session-id>
Example: session cancel 1

[usage:session-set]
session set <command> <session-id> <value>
Example: session set budget 1 100
         session set mode 1 MANUAL_FREQ
         session set window 1 100
         session set overage 1 100
         session set underage 1 100
         session set overage_time 1 100
         session set underage_time 1 100
         session set frequency 1 100
         session set strict 1 0

[usage:session-get]
session get <command> <session-id>
Example: session get budget 1
         session get mode 1
         session get window 1
         session get overage 1
         session get underage 1
         session get overage_time 1
         session get underage_time 1
         session get frequency 1
         session get strict 1

[usage:query-event-data]
query event data [start-date [end-date]] <node-list>
Date has the format: YYYY-MM-DD hh:mm:ss
                     YYYY-MM-DD (00:00:00 will be added)
                     hh:mm:ss (current day will be added)
Example: query event data 2016-02-16 08:22:00 2016-02-16 08:22:14 c[2:1-10]
         query event data 08:22:00 2015-01-01
         query event data 10:00:00 c[2:1-10],a[2:1-10]

[usage:query-event-sensor-data]
query event sensor-data <event-id> [interval] <sensor-list> [node-list]
Interval has the format: [before/after] #.#U
                         [before/after] hh:mm:ss
                         were "U" = "H" for hours, "M" for minutes, "S" for seconds
                         if "U" is not specified "M" (minutes will be selected)
Example: query event sensor-data 1 before 10 coretemp* c[2:1-10]
         query event sensor-data 1 -00:10:00 * c[2:1-10],node01,a[2:21-30]
         query event sensor-data 1 -10M coretemp*,freq_core[1:0-9]

[usage:query-history]
query history [start-date [end-date]] <nodelist>
Date has the format: YYYY-MM-DD hh:mm:ss
                     YYYY-MM-DD (00:00:00 will be added)
                     hh:mm:ss (current day will be added)
Example: query history 2015-11-13 15:00:00 2015-11-13 16:00:00 c[2:1-10]
         query history 13:01:01 2015-01-01
         query history *

[usage:query-idle]
query idle [interval] <node-list>
Interval has the format: [before/after] #.#U
                         [before/after] hh:mm:ss
                         were "U" = "H" for hours, "M" for minutes, "S" for seconds
                         if "U" is not specified "S" (seconds will be selected)
Example: query idle 60 c[2:1-10]
         query idle 1.5H *
         query idle 01:30:00 c[2:1-10],a[2:1-10]

[usage:query-log]
query log <text-in-log> [start-date [end-date]] [nodelist]
Date has the format: YYYY-MM-DD hh:mm:ss
                     YYYY-MM-DD (00:00:00 will be added)
                     hh:mm:ss (current day will be added)
Example: query log *access* c[2:1-10]
         query log * 13:01:01 2015-01-01
         query log *

[usage:query-node-status]
query node status <node-list>
Example: query node status c[2:1-10]
         query node status c[1:1-10],$group01
         query node status *

[usage:query-sensor]
query sensor <sensor-list> [start-date [end-date]] <upper-bound lower-bound> [node-list]
Date has the format: YYYY-MM-DD hh:mm:ss
                     YYYY-MM-DD (00:00:00 will be added)
                     hh:mm:ss (current day will be added)
Example: query sensor coretemp* 2015-11-13 14:00:00 2015-11-13 16:00:00 0.1 1 c[2:1-10]
         query sensor coretemp*,freq_core[1:0-9] 14:00:00 2015-01-01 * * c[2:1-10],node01
         query sensor syslog* KERNEL* * c[2:1-10],a[2:21-30]

[usage:grouping-add]
grouping add <tag> <nodelist>
Example: grouping add group1 c[2:1-10]

[usage:grouping-remove]
grouping remove <tag> <nodelist>
Example: grouping remove group1 c[2:1-10]
         grouping remove * c[2:1-10]
         grouping remove group1 *
         grouping remove * *

[usage:grouping-list]
grouping list <tag> <nodelist>
Example: grouping list group1 c[2:1-10]
         grouping list * c[2:1-10]
         grouping list group1 *
         grouping list * *

[usage:workflow-add]
workflow add <file> [aggregators]
Example: workflow add /tmp/workflow1.xml
         workflow add /tmp/workflow1.xml master1

[usage:workflow-remove]
workflow remove <aggregators> <workflow-name> <workflow-id>
Example: workflow remove master1 wf1 0

[usage:workflow-list]
workflow list <aggregators>
Example: workflow list master1

[usage:notifier-get]
notifier get policy <nodelist>
Example: notifier get policy c[2:1-10]

[usage:notifier-set]
notifier set policy <severity> <action> <nodelist>
Example: notifier set policy emerg smtp c[2:1-10]
         notifier set policy alert smtp c[2:1-10]
         notifier set policy crit smtp c[2:1-10]
         notifier set policy error syslog c[2:1-10]
         notifier set policy warn syslog c[2:1-10]
         notifier set policy notice syslog c[2:1-10]
         notifier set policy debug syslog c[2:1-10]

[usage:notifier-get-smtp]
notifier get smtp-policy <nodelist>
Example: notifier get smtp-policy c[2:1-10]

[usage:notifier-set-smtp]
notifier set smtp-policy <key> <value> <nodelist>
Example: notifier set smtp-policy server_name <email-server> c[2:1-10]
         notifier set smtp-policy server_port <portno> c[2:1-10]
         notifier set smtp-policy to_addr <email-addr> c[2:1-10]
         notifier set smtp-policy from_addr <email-addr> c[2:1-10]
         notifier set smtp-policy from_name <name> c[2:1-10]
         notifier set smtp-policy subject <email-subject> c[2:1-10]
         notifier set smtp-policy body_preffix <email-body-preffix> c[2:1-10]
         notifier set smtp-policy body_suffix <email-body-suffix> c[2:1-10]
         notifier set smtp-policy priority <1-high,2-normal,3-low> c[2:1-10]

[usage:chassis-id-state]
chassis-id state <nodelist>
Example: chassis-id state c[2:1-10]

[usage:chassis-id-disable]
chassis-id disable <nodelist>
Example: chassis-id disable c[2:1-10]

[usage:chassis-id-enable]
chassis-id enable [seconds] <nodelist>
Example: chassis-id enable 10 c[2:1-10]
